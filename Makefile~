CC := clang
CFLAGS := -Wall -Wextra -std=gnu17 -I/usr/local/include -Iavl-2.0.3
CXX := clang++
CXXFLAGS := -Wall -Wextra -std=gnu++17 -I/usr/local/include -Iavl-2.0.3
LDFLAGS := -Xlinker -Lavl-2.0.3

LIBAVL := avl-2.0.3
DIRS := $(LIBAVL)
CLEANDIRS := $(DIRS:%=%-clean)

EXES := avl-demo
OBJS := avl-demo.o
deps := $(OBJS:%.o=.%.o.d)
compdb-dep := $(OBJS:%.o=.%.o.json) # compilation database
compdb := compile_commands.json


.PHONY: all debug release loop clean run upload scan-build valgrind \
	$(DIRS) $(CLEANDIRS)

# set debug to release before handing in
all: debug

debug: CXXFLAGS += -g
debug: avl-demo $(compdb)

release: CXXFLAGS += -DNDEBUG -O2
release:


$(compdb): $(compdb-dep)
	sed -e '1s/^/[/' -e '$$s/,$$/]/' $^ > $@

avl-demo: avl-demo.o
	$(MAKE) -C $(LIBAVL) programs
	$(CXX) $(LDFLAGS) -o $@ $^

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ -MMD -MF .$@.d -MJ .$@.json $<

%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ -MMD -MF .$@.d -MJ .$@.json $<



# loop: printer printer-s test/rand
#     while true; do \
#         printf .; \
#         test/rand > test/in; \
#         ./printer < test/in > test/tmp || break; \
#         ./printer-s < test/in > test/out || break; \
#         diff test/out test/tmp || break; \
#     done

# run: printer
#     /usr/bin/time -v ./printer < test/samp.in | diff - test/samp.out

# valgrind: printer
#     valgrind --leak-check=full --show-leak-kinds=all --quiet \
#         ./printer < test/5.in > /dev/null

scan-build:
	@PATH=/usr/local/opt/llvm/bin:$(PATH) scan-build make

upload:
	scp -P 9453 -r *.hpp *.h *.cpp Makefile \
		soyccan@bravo.nctu.me:/home/soyccan/Documents/dsa-hw6/

clean: $(CLEANDIRS)
	rm -rf $(EXES) $(OBJS) $(deps) $(compdb) $(compdb-dep)

$(CLEANDIRS):
	$(MAKE) -C $(@:%-clean=%) clean

-include $(deps)
